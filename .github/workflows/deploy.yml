name: Build, Test & Deploy to Azure

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ghcr.io/kaytrust/driver-did-near

jobs:
  build-test-push:
    name: Build, Test, and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v3

      - name: üß∞ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # - name: üì¶ Install dependencies
      #   run: npm ci

      # - name: ‚úÖ Run tests
      #   run: npm run test

      - name: üè∑Ô∏è Extract version from package.json
        id: version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: üê≥ Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: üî® Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.version.outputs.version }} .
          docker tag $IMAGE_NAME:${{ steps.version.outputs.version }} $IMAGE_NAME:latest

      - name: üöÄ Push Docker images to GHCR
        run: |
          docker push $IMAGE_NAME:${{ steps.version.outputs.version }}
          docker push $IMAGE_NAME:latest

  deploy:
    name: Deploy to Azure Web App for Containers
    runs-on: ubuntu-latest
    needs: build-test-push

    steps:
      - name: üì¶ Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          images: ${{ env.IMAGE_NAME }}:latest
          app-settings: |
            WEBSITES_PORT=8000
            CONTRACT_ID=${{ vars.CONTRACT_ID }}
            RPC_URL=${{ vars.RPC_URL }}
            NETWORK_ID=${{ vars.NETWORK_ID }}
